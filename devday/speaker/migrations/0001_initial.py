# -*- coding: utf-8 -*-
# Generated by Django 1.11.16 on 2018-10-10 17:02
from __future__ import unicode_literals

import devday.extras
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import speaker.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('event', '0005_auto_20181010_2051'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PublishedSpeaker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='speaker name')),
                ('slug', models.SlugField(max_length=128, verbose_name='slug')),
                ('twitter_handle', models.CharField(blank=True, max_length=64, verbose_name='twitter handle')),
                ('phone', models.CharField(blank=True, max_length=32, verbose_name='Phone')),
                ('position', models.CharField(blank=True, max_length=128, verbose_name='job or study subject')),
                ('organization', models.CharField(blank=True, max_length=128, verbose_name='company or institution')),
                ('video_permission', models.BooleanField(help_text='I hereby agree that audio and visual recordings of me and my session can be published on the social media channels of the event organizer and the website devday.de.', verbose_name='Video permitted')),
                ('short_biography', models.TextField(verbose_name='Short biography')),
                ('date_published', models.DateTimeField(default=django.utils.timezone.now, verbose_name='published as speaker')),
                ('portrait', devday.extras.ValidatedImageField(upload_to=speaker.models.event_speaker_image_directory, verbose_name='Speaker image')),
                ('thumbnail', models.ImageField(blank=True, max_length=500, null=True, upload_to=speaker.models.event_speaker_thumbnail_directory, verbose_name='Speaker image thumbnail')),
                ('public_image', models.ImageField(blank=True, max_length=500, null=True, upload_to=speaker.models.event_public_speaker_image_directory, verbose_name='Public speaker image')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='event.Event')),
            ],
            options={
                'verbose_name': 'published speaker',
                'verbose_name_plural': 'published speakers',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Speaker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='speaker name')),
                ('slug', models.SlugField(max_length=128, verbose_name='slug')),
                ('twitter_handle', models.CharField(blank=True, max_length=64, verbose_name='twitter handle')),
                ('phone', models.CharField(blank=True, max_length=32, verbose_name='Phone')),
                ('position', models.CharField(blank=True, max_length=128, verbose_name='job or study subject')),
                ('organization', models.CharField(blank=True, max_length=128, verbose_name='company or institution')),
                ('video_permission', models.BooleanField(help_text='I hereby agree that audio and visual recordings of me and my session can be published on the social media channels of the event organizer and the website devday.de.', verbose_name='Video permitted')),
                ('short_biography', models.TextField(verbose_name='Short biography')),
                ('date_registered', models.DateTimeField(default=django.utils.timezone.now, verbose_name='registered as speaker')),
                ('portrait', devday.extras.ValidatedImageField(upload_to='speaker_original', verbose_name='Speaker image')),
                ('thumbnail', models.ImageField(blank=True, max_length=500, null=True, upload_to='speaker_thumbs', verbose_name='Speaker image thumbnail')),
                ('public_image', models.ImageField(blank=True, max_length=500, null=True, upload_to='speaker_public', verbose_name='Public speaker image')),
                ('shirt_size', models.PositiveSmallIntegerField(choices=[(1, 'XS'), (2, 'S'), (3, 'M'), (4, 'L'), (5, 'XL'), (6, 'XXL'), (7, 'XXXL')], verbose_name='T-shirt size')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='speaker', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'speaker',
                'verbose_name_plural': 'speakers',
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='publishedspeaker',
            name='speaker',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='speaker.Speaker'),
        ),
    ]
